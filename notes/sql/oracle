Oracle
###################

# List all users
SELECT * FROM DBA_USERS;

# List all tablespaces
SELECT TABLESPACE_NAME FROM USER_TABLESPACES:

# Move a use to new tablespace
ALTER USER <username> DEFAULT TABLESPACE <new-tablespace>

# Change schema for testing faulty sql scripts in SQL Developer
ALTER SESSION SET CURRENT_SCHEMA = REF;




# Sjekke antall transer og summer i en bulk cycle
# Sjekker mot OLAP for Ã¥ ikke skape trafikk eller stress i OLTP
SELECT COUNT(*) FROM OWNER_OLAP_KT3.CREDIT_TRANS_OLAP WHERE CYCLE='312638';
SELECT SUM(AMOUNT) FROM OWNER_OLAP_KT3.CREDIT_TRANS_OLAP WHERE CYCLE='312638';


# Kille active som blokerer migrate
SELECT SID, Serial#, UserName, Status, SchemaName, Logon_Time, 'alter system kill session ' || ''''|| vs.sid || ',' || vs.serial# || ''';' FROM v$session vs WHERE UserName IS NOT NULL;
alter system kill session '1182,16636';


# SQLPLUS
sqlplus64 '<connectionString>'

ALTER session SET current_schema=owner_oltp;

SET PAGESIZE 100
SET LINESIZE 250
SET NUMWIDTH 15
column WORK_QUEUE_NAME format a32
column START_TIME format a32
column FINISHED_TIME format a32
column RECEIVED_TIME_ICF format a32
column SENT_TIME_CVF format a32
column SENT_TIME_SCF format a32
column UNIQUE_ID format a40
column REPLICATION_DATA_TYPE format a32
column DATA_REPLICATION_EVENT_TYPE format a32
column DATA_REPLICATION_TYPE format a32
column ENTITY_ID format a32
column REPLICATION_LOCK_TIME format a16
column REPLICATION_EVENT_TYPE format a28
column CREATED format a32

SELECT FINANCIAL_IDENTIFIER FROM PARTICIPANT WHERE INSTANT_PAYMENT = '0';

update participant set instant_payment = '1';

commit;

quit



# Konvertere BLOB til tekst for eksport
select utl_raw.cast_to_varchar2(dbms_lob.substr(BLOB_FIELD)) from TABLE_WITH_BLOB where ID = '<row id>';


select LAR.*, DB_FILE.FILE_NAME, utl_raw.cast_to_varchar2(dbms_lob.substr(content)) from DB_FILE inner join LAR on DB_FILE.ID = LAR.TRANSFER_INITIATION_FILE_ID where LAR.TRANSFER_INITIATION_FILE_ID is not null;


select STANDING_ORDER.*, DB_FILE.FILE_NAME, utl_raw.cast_to_varchar2(dbms_lob.substr(content)) from DB_FILE inner join LAR on STANDING_ORDER.ID = LAR.STANDING_ORDER_ID where LAR.STANDING_ORDER_ID is not null inner join STANDING_ORDER on DB_FILE.ID = STANDING_ORDER.DB_FILE_ID;

select STANDING_ORDER.*, DB_FILE.FILE_NAME, utl_raw.cast_to_varchar2(dbms_lob.substr(content)) content from DB_FILE 
  inner join STANDING_ORDER on DB_FILE.ID        = STANDING_ORDER.DB_FILE_ID
  inner join LAR            on STANDING_ORDER.ID = LAR.STANDING_ORDER_ID;
  
  

# Create exe time
select FINISHED_TIME - START_TIME, id , WORK_QUEUE_NAME, START_TIME, FINISHED_TIME from work_item where 
start_time              >= '08.04.2019 06.00.00,000000000'
order by FINISHED_TIME - START_TIME desc;



# Find sessions locking DB
SELECT SID, Serial#, OSuser, Machine, UserName, Status, SchemaName, Logon_Time, 'alter system kill session ' || ''''|| vs.sid || ',' || vs.serial# || ''';' 
FROM v$session vs
WHERE
UserName IS NOT NULL;

# For loop
DECLARE 
a NUMBER:=1; 
l_rec NUMBER;
BEGIN
LOOP
select count(*) into l_rec from credit_transfer where status='CLEARED' and input_credit_file=157792 and settlement_date=TO_DATE('2019-04-26', 'YYYY-MM-DD');
a:=a+1;
EXIT WHEN a>1000;
END LOOP;
END;
/


# Use of timestamp with time zone
select count(*) from credit_transfer 
  where received_time >= to_timestamp_tz('2019-10-15T00:00:00Z', 'yyyy-mm-dd"T"HH24:mi:sstzhtzm')
  and received_time <= to_timestamp_tz('2019-10-16T00:00:00Z', 'yyyy-mm-dd"T"HH24:mi:sstzhtzm')
  and status='COMPLETE';


# List file names of failed SendOutboundFilesService
select dbf.file_name, wi.* from work_item wi
  inner join credit_validation_file cvf on entity_id=cvf.id
  inner join db_file dbf on cvf.db_file=dbf.id
  where processing_state=2;

